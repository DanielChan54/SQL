# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 


--Q1. What 10 songs have the top 10 liveness? 

SELECT artist_name
,track_name
,liveness
FROM Spotifydata
GROUP BY track_name
ORDER BY liveness desc
LIMIT 10;


--Q2. What are the 10 least popular songs? What is their energy rating?
SELECT artist_name
,track_name
,popularity
,energy
FROM Spotifydata
GROUP BY track_name
ORDER BY popularity asc
LIMIT 10;

--Q3. What artist released the shortest song? How long is that track?
SELECT artist_name
,track_name
,duration_ms
FROM Spotifydata
GROUP BY track_name
ORDER BY duration_ms asc
LIMIT 1;

--Q4. Who are the top 10 artists based on popularity?
SELECT artist_name
,popularity
FROM Spotifydata
GROUP BY artist_name
ORDER BY popularity desc
LIMIT 10;

--Q5. Which song(s) have a time signature of 3?
SELECT track_name
,time_signature
FROM Spotifydata
WHERE time_signature = 3;

